.SUFFIXES: .o .c
.PHONY: all options prog valmem dist clean

PROGRAM    = concurrent-add
VERSION    = 1.0.0
SRC        = $(wildcard *.c)
OBJ        = $(SRC:.c=.o)
TEST_FRAME = Unity
MDS        = Makefile COPYING README CHANGELOG
CC         = gcc
OPTFLAGS	= -O2 -march=native -mtune=native # Og - debugging
WARNFLAGS	= -Wall -Wextra -Wpedantic --pedantic-errors -Werror \
			  -Wfatal-errors -Wduplicated-branches -Walloc-zero \
			  -Wdeclaration-after-statement
BSDFLAGS   = -isystem /usr/include/bsd -DLIBBSD_OVERLAY
CFLAGS     = -std=c99 -g $(WARNFLAGS) $(OPTFLAGS) $(BSDFLAGS)
LDLIBS     = -lbsd -lm

all: options $(PROGRAM)
options:
	@echo "PROGRAM = $(PROGRAM)"
	@echo $(PROGRAM) build options:
	@echo "PREFIX  = $(PREFIX)"
	@echo "CC      = $(CC)"
	@echo "CFLAGS  = $(CFLAGS)"
	@echo "LDLIBS  = $(LDLIBS)"
	@echo "LDFLAGS = $(LDFLAGS)"
$(PROGRAM): $(filter-out $(TESTPROG).o, $(OBJ))
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LDLIBS)
.c.o:
	$(CC) $(CFLAGS) -c $<
prog: options $(PROGRAM)
	./$(PROGRAM)
valmem: options $(PROGRAM)
	valgrind \
		--track-origins=yes --leak-check=full --leak-resolution=high -s \
		./$(PROGRAM)
dist: clean
	mkdir -p -- "$(PROGRAM)-$(VERSION)"
	cp -R -- $(MDS) *.c *.h "$(PROGRAM)-$(VERSION)"
	tar -cf - "$(PROGRAM)-$(VERSION)" | \
		bzip2 -c > "$(PROGRAM)-$(VERSION).tar.bz2"
	rm -rf -- "$(PROGRAM)-$(VERSION)"
clean:
	@rm -f $(PROGRAM) $(OBJ) $(PROGRAM)-1.0.0.tar.bz2
